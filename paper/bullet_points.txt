Here are the major points of our paper

Abstract:

-Something about the organization and what they do for events, etc

Problem description:

-Describe the problem of scheduling and minimizing volunteers

Simplifications:

Assumptions:
  Volunteers will work in continuous chunks of 2 - 6 hours each
  each shift will be from 30 minutes to 2 hours
  each volunteer can get from shift to shift in very little time
  probably more...

Mathematical Model:

-Variant of the Bin packing problem.
-Volunteers are bins. Shifts are items.
-Volunteer bins have certain slots open.
-Shifts can only be placed into bins in a certain way
-Almost 1D bin packing, where bins are 1x24 in length, items are 1xm, and can only by slotted into slots that match up with time
-we mitigate this time slotting issue by bringing the "capacity" of the bin to infinity if adding a shift conflicts with the time of an already assigned shift.
-we also take care of the availability of each volunteer by "pre-filling" each volunteer bin with a pseudo-shift which represents the times that volunteer is NOT able to work


Solution of the mathematical problem:

- We will attempt to provide the minimum number of volunteers needed to cover each shift (assign all shifts to volunteers such that the number of volunteers with assigned shifts is minimized)
- We will present approximation algorithms (BFD) which runs fast but does not guarantee optimality.
- We will also present a bin completion algorithm which does find an optimal solution using an "any-time" algorithm. This is from Korf, et al.
- We will then try to balance out the schedule to make it more sane for practical purposes.

Results:

- Present the schedules with randomized data and interpret the results
- show how the algorithms compared, and where they fall short.


Improvements:

- Any localized swapping/balancing we can do to improve schedules?
- How about alternative schedules / catching edge cases?

Conclusions:

- blah blah blah, our algo works and improves things by x, y ,z
- THis shit is hard, NP-complete. but our problem size was small so things kinda worked out.

Acknowledgements:

- Make sure to thank Prof Sara Billey!!!!
- Anyone else?

References:

-Korf
-Martello Toth
-Algorithm Design Manual (Steven Skiena)
-Other papers in the notes folder?

Verification statement:

We get his later?


Appendix:

Copy of the code that was written.
